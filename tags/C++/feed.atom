<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ja-JP"><author><name>azyobuzin</name><uri>https://twitter.com/azyobuzin</uri></author><id>https://blog.azyobuzi.net/tags/C%2B%2B/feed.atom</id><link href="https://blog.azyobuzi.net/tags/C%2B%2B/feed.atom" rel="self" type="application/atom+xml" /><link href="https://blog.azyobuzi.net/tags/C%2B%2B/" rel="alternate" type="text/html" /><title>C++ | あじょろぐ</title><updated>2022-02-05T01:27:03+09:00</updated><entry><category term="tech" label="tech" /><category term="C++" label="C++" /><content type="html">&#x3C;p>あけましておめでとうございます。季節感もなにもないブログですが、修論締切間近の時期に研究で使った技術をまとめようという点は季節感かもしれません。&#x3C;/p>
&#x3C;p>今回のネタは、クラスタサイズに制約を設けてクラスタリングをしようという話です。&#x3C;/p>
&#x3C;p>クラスタリングといったら、もっとも代表的な手法は k-means です。 k-means は&#x3C;b>クラスタ数&#x3C;/b>を事前に指定して、クラスタリングを行います。つまり、 k-means を使うときは、データを &#x3C;var>k&#x3C;/var> 個に分けたら何か傾向が見えるかもな～という気持ちで使うことになります。このとき、1クラスタに属するデータ数（&#x3C;b>クラスタサイズ&#x3C;/b>）は、クラスタごとに異なります。&#x3C;/p>
&#x3C;p>では、クラスタサイズを事前に指定するような方法はないのでしょうか。データが大量にあるので、データを &#x3C;var>c&#x3C;/var> 個に均等に分割して処理したいな～というときに、どうしたらいいのでしょうか。というわけで今日の論文紹介です。&#x3C;/p>
&#x3C;ul>
&#x3C;li>&#x3C;a href="https://www.jstage.jst.go.jp/article/fss/32/0/32_329/_article/-char/ja">最適化に基づくマージン付きサイズ均等クラスタリングアルゴリズム&#x3C;/a>&#x3C;/li>
&#x3C;li>&#x3C;a href="https://ieeexplore.ieee.org/document/8023341">Controlled-sized clustering based on optimization&#x3C;/a>&#x3C;/li>
&#x3C;/ul>
&#x3C;p>上が日本語版、下が英語版で、書いてあることは同じです。この論文では、クラスタサイズの基準 &#x3C;var>K&#x3C;/var> と、クラスタサイズの下限 &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;munder accentunder="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/munder>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">\underline{K}&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.8833em;vertical-align:-0.2em;">&#x3C;/span>&#x3C;span class="mord underline">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.6833em;">&#x3C;span style="top:-2.84em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="underline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> 、上限 &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;mover accent="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/mover>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">\overline{K}&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.8833em;">&#x3C;/span>&#x3C;span class="mord overline">&#x3C;span class="vlist-t">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.8833em;">&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.8033em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="overline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> を指定すると、クラスタサイズがこの範囲内に収まるようにいい感じにクラスタリングする方法が示されています。英語版では、このアルゴリズムを COCBO と呼んでいるので、この記事でも COCBO と呼んでいこうと思います。&#x3C;/p>
&#x3C;h2>アルゴリズムの説明&#x3C;/h2>
&#x3C;p>パラメータは、クラスタサイズの基準 &#x3C;var>K&#x3C;/var> と、クラスタサイズの下限 &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;munder accentunder="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/munder>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">\underline{K}&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.8833em;vertical-align:-0.2em;">&#x3C;/span>&#x3C;span class="mord underline">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.6833em;">&#x3C;span style="top:-2.84em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="underline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> 、上限 &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;mover accent="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/mover>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">\overline{K}&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.8833em;">&#x3C;/span>&#x3C;span class="mord overline">&#x3C;span class="vlist-t">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.8833em;">&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.8033em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="overline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> です。このとき、このアルゴリズムを使うと、&#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;mi>c&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mrow>&#x3C;mo fence="true">⌊&#x3C;/mo>&#x3C;mfrac>&#x3C;mi>n&#x3C;/mi>&#x3C;mi>K&#x3C;/mi>&#x3C;/mfrac>&#x3C;mo fence="true">⌋&#x3C;/mo>&#x3C;/mrow>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">c = \left\lfloor \frac{n}{K} \right\rfloor&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.4306em;">&#x3C;/span>&#x3C;span class="mord mathnormal">c&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:1.2em;vertical-align:-0.35em;">&#x3C;/span>&#x3C;span class="minner">&#x3C;span class="mopen delimcenter" style="top:0em;">&#x3C;span class="delimsizing size1">⌊&#x3C;/span>&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mopen nulldelimiter">&#x3C;/span>&#x3C;span class="mfrac">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.6954em;">&#x3C;span style="top:-2.655em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.23em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="frac-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.394em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">n&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.345em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mclose nulldelimiter">&#x3C;/span>&#x3C;/span>&#x3C;span class="mclose delimcenter" style="top:0em;">&#x3C;span class="delimsizing size1">⌋&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> 個（&#x3C;var>n&#x3C;/var> はデータ数）のクラスタにクラスタリングすることができます。ただし、以下の条件を満たす必要があります。&#x3C;/p>
&#x3C;span class="katex-display">&#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML" display="block">&#x3C;semantics>&#x3C;mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em">&#x3C;mtr>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd>&#x3C;mstyle scriptlevel="0" displaystyle="true">&#x3C;munder accentunder="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/munder>&#x3C;/mstyle>&#x3C;/mtd>&#x3C;mtd>&#x3C;mstyle scriptlevel="0" displaystyle="true">&#x3C;mrow>&#x3C;mrow>&#x3C;/mrow>&#x3C;mo>≤&#x3C;/mo>&#x3C;mi>K&#x3C;/mi>&#x3C;/mrow>&#x3C;/mstyle>&#x3C;/mtd>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd class="mml-eqn-num">&#x3C;/mtd>&#x3C;/mtr>&#x3C;mtr>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd>&#x3C;mstyle scriptlevel="0" displaystyle="true">&#x3C;mover accent="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/mover>&#x3C;/mstyle>&#x3C;/mtd>&#x3C;mtd>&#x3C;mstyle scriptlevel="0" displaystyle="true">&#x3C;mrow>&#x3C;mrow>&#x3C;/mrow>&#x3C;mo>≥&#x3C;/mo>&#x3C;mi>K&#x3C;/mi>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;/mstyle>&#x3C;/mtd>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd class="mml-eqn-num">&#x3C;/mtd>&#x3C;/mtr>&#x3C;mtr>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd>&#x3C;mstyle scriptlevel="0" displaystyle="true">&#x3C;mrow>&#x3C;mn>0&#x3C;/mn>&#x3C;mo>&#x26;#x3C;&#x3C;/mo>&#x3C;mi>n&#x3C;/mi>&#x3C;/mrow>&#x3C;/mstyle>&#x3C;/mtd>&#x3C;mtd>&#x3C;mstyle scriptlevel="0" displaystyle="true">&#x3C;mrow>&#x3C;mrow>&#x3C;/mrow>&#x3C;mo>≤&#x3C;/mo>&#x3C;mo stretchy="false">(&#x3C;/mo>&#x3C;mi>K&#x3C;/mi>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;mo stretchy="false">)&#x3C;/mo>&#x3C;mrow>&#x3C;mo fence="true">⌊&#x3C;/mo>&#x3C;mfrac>&#x3C;mi>n&#x3C;/mi>&#x3C;mi>K&#x3C;/mi>&#x3C;/mfrac>&#x3C;mo fence="true">⌋&#x3C;/mo>&#x3C;/mrow>&#x3C;/mrow>&#x3C;/mstyle>&#x3C;/mtd>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd class="mml-eqn-num">&#x3C;/mtd>&#x3C;/mtr>&#x3C;/mtable>&#x3C;annotation encoding="application/x-tex">\begin{align}
\underline{K} &#x26;#x26; \leq K \\
\overline{K} &#x26;#x26; \geq K+1 \\
0 &#x26;#x3C; n &#x26;#x26; \leq (K+1) \left\lfloor \frac{n}{K} \right\rfloor
\end{align}&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:5.1793em;vertical-align:-2.3397em;">&#x3C;/span>&#x3C;span class="mtable">&#x3C;span class="col-align-r">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:2.8397em;">&#x3C;span style="top:-5.1497em;">&#x3C;span class="pstrut" style="height:3.15em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord underline">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.6833em;">&#x3C;span style="top:-2.84em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="underline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.6063em;">&#x3C;span class="pstrut" style="height:3.15em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord overline">&#x3C;span class="vlist-t">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.8833em;">&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.8033em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="overline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-1.7963em;">&#x3C;span class="pstrut" style="height:3.15em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord">0&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">&#x26;#x3C;&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mord mathnormal">n&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:2.3397em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="col-align-l">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:2.8397em;">&#x3C;span style="top:-5.1497em;">&#x3C;span class="pstrut" style="height:3.15em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord">&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">≤&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.6063em;">&#x3C;span class="pstrut" style="height:3.15em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord">&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">≥&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-1.7963em;">&#x3C;span class="pstrut" style="height:3.15em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord">&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">≤&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mopen">(&#x3C;/span>&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mclose">)&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="minner">&#x3C;span class="mopen delimcenter" style="top:0em;">&#x3C;span class="delimsizing size2">⌊&#x3C;/span>&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mopen nulldelimiter">&#x3C;/span>&#x3C;span class="mfrac">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:1.1076em;">&#x3C;span style="top:-2.314em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.23em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="frac-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.677em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">n&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.686em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mclose nulldelimiter">&#x3C;/span>&#x3C;/span>&#x3C;span class="mclose delimcenter" style="top:0em;">&#x3C;span class="delimsizing size2">⌋&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:2.3397em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="tag">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:2.8397em;">&#x3C;span style="top:-5.1497em;">&#x3C;span class="pstrut" style="height:3.15em;">&#x3C;/span>&#x3C;span class="eqn-num">&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.6063em;">&#x3C;span class="pstrut" style="height:3.15em;">&#x3C;/span>&#x3C;span class="eqn-num">&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-1.7963em;">&#x3C;span class="pstrut" style="height:3.15em;">&#x3C;/span>&#x3C;span class="eqn-num">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:2.3397em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>
&#x3C;p>最後の条件は、次に説明する最適化問題を解いたときに、すべてのデータをいずれかのクラスタに属させることができるかを表しています。&#x3C;/p>
&#x3C;p>では、アルゴリズムの中身に行きます。アルゴリズムのベースは k-means ですが、データがどのクラスタに属するかを計算する部分が異なります。 k-means では、各データがもっとも近い重心のクラスタに属するよう帰属度を更新していました。この部分を、クラスタサイズを制約条件とする線形計画問題として解いてしまおうというのが、 COCBO のアイデアです。別の言い方をすると、先の条件を満たしていれば、この問題は線形計画法で解けるという発見です。&#x3C;/p>
&#x3C;p>アルゴリズムの流れはこのようになります。&#x3C;/p>
&#x3C;ol>
&#x3C;li>初期のクラスタ重心を設定する。データからランダムに &#x3C;var>c&#x3C;/var> 個を選んで重心にすれば良い。&#x3C;/li>
&#x3C;li>帰属度（データがどのクラスタに属するか）を更新する。&#x3C;/li>
&#x3C;li>クラスタ重心を更新する。重心は、クラスタに属するデータの平均となる。&#x3C;/li>
&#x3C;li>クラスタ重心が変化しなければ終了、そうでなければ、2へ。&#x3C;/li>
&#x3C;/ol>
&#x3C;p>手順2以外は k-means と同じになります。&#x3C;/p>
&#x3C;p>では、どのように帰属度を求めるのか見ていきましょう。まず記号を定義していきます。クラスタ重心を &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;msub>&#x3C;mi>v&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/msub>&#x3C;mtext> &#x3C;/mtext>&#x3C;mo stretchy="false">(&#x3C;/mo>&#x3C;mi>i&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mtext> &#x3C;/mtext>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>c&#x3C;/mi>&#x3C;mo stretchy="false">)&#x3C;/mo>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">v_i \ (i=1,\cdots,c)&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:1em;vertical-align:-0.25em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.03588em;">v&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3117em;">&#x3C;span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mathnormal mtight">i&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace"> &#x3C;/span>&#x3C;span class="mopen">(&#x3C;/span>&#x3C;span class="mord mathnormal">i&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:1em;vertical-align:-0.25em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord mathnormal">c&#x3C;/span>&#x3C;span class="mclose">)&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> と表します。帰属度を &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mtext> &#x3C;/mtext>&#x3C;mo stretchy="false">(&#x3C;/mo>&#x3C;mi>k&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mtext> &#x3C;/mtext>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>n&#x3C;/mi>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mspace width="1em">&#x3C;/mspace>&#x3C;mi>i&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mtext> &#x3C;/mtext>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>c&#x3C;/mi>&#x3C;mo stretchy="false">)&#x3C;/mo>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">u_{ki} \ (k=1,\cdots,n, \quad i=1,\cdots,c)&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:1em;vertical-align:-0.25em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">ki&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace"> &#x3C;/span>&#x3C;span class="mopen">(&#x3C;/span>&#x3C;span class="mord mathnormal" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:0.854em;vertical-align:-0.1944em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord mathnormal">n&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:1em;">&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord mathnormal">i&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:1em;vertical-align:-0.25em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord mathnormal">c&#x3C;/span>&#x3C;span class="mclose">)&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> と表します。データ &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;msub>&#x3C;mi>x&#x3C;/mi>&#x3C;mi>k&#x3C;/mi>&#x3C;/msub>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">x_k&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.5806em;vertical-align:-0.15em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">x&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mathnormal mtight" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> がクラスタ &#x3C;var>i&#x3C;/var> に属するときを &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">u_{ki}=1&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.5806em;vertical-align:-0.15em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">ki&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:0.6444em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> 、そうでないときを &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>0&#x3C;/mn>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">u_{ki}=0&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.5806em;vertical-align:-0.15em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">ki&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:0.6444em;">&#x3C;/span>&#x3C;span class="mord">0&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> と表します。&#x3C;/p>
&#x3C;p>このとき、次の目的関数を最小化する問題を考えます。目的変数はすべての &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">u_{ki}&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.5806em;vertical-align:-0.15em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">ki&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> です。つまり重心からの距離を最小化するような帰属度を求めるということです。&#x3C;/p>
&#x3C;span class="katex-display">&#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML" display="block">&#x3C;semantics>&#x3C;mtable rowspacing="0.16em" columnspacing="1em">&#x3C;mtr>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd>&#x3C;mstyle scriptlevel="0" displaystyle="true">&#x3C;mrow>&#x3C;mi>J&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;munderover>&#x3C;mo>∑&#x3C;/mo>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;mi>n&#x3C;/mi>&#x3C;/munderover>&#x3C;munderover>&#x3C;mo>∑&#x3C;/mo>&#x3C;mrow>&#x3C;mi>i&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;mi>c&#x3C;/mi>&#x3C;/munderover>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mi mathvariant="normal">∥&#x3C;/mi>&#x3C;msub>&#x3C;mi>x&#x3C;/mi>&#x3C;mi>k&#x3C;/mi>&#x3C;/msub>&#x3C;mo>−&#x3C;/mo>&#x3C;msub>&#x3C;mi>v&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/msub>&#x3C;msup>&#x3C;mi mathvariant="normal">∥&#x3C;/mi>&#x3C;mn>2&#x3C;/mn>&#x3C;/msup>&#x3C;/mrow>&#x3C;/mstyle>&#x3C;/mtd>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd class="mml-eqn-num">&#x3C;/mtd>&#x3C;/mtr>&#x3C;/mtable>&#x3C;annotation encoding="application/x-tex">\begin{equation}
J = \sum_{k=1}^n \sum_{i=1}^c u_{ki} \| x_k - v_i \| ^2
\end{equation}&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:2.9535em;vertical-align:-1.2268em;">&#x3C;/span>&#x3C;span class="mtable">&#x3C;span class="col-align-c">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:1.7268em;">&#x3C;span style="top:-3.7268em;">&#x3C;span class="pstrut" style="height:3.6514em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.09618em;">J&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mop op-limits">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:1.6514em;">&#x3C;span style="top:-1.8479em;margin-left:0em;">&#x3C;span class="pstrut" style="height:3.05em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;span class="mrel mtight">=&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.05em;">&#x3C;span class="pstrut" style="height:3.05em;">&#x3C;/span>&#x3C;span>&#x3C;span class="mop op-symbol large-op">∑&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-4.3em;margin-left:0em;">&#x3C;span class="pstrut" style="height:3.05em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mathnormal mtight">n&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:1.3021em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mop op-limits">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:1.6514em;">&#x3C;span style="top:-1.8723em;margin-left:0em;">&#x3C;span class="pstrut" style="height:3.05em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">i&#x3C;/span>&#x3C;span class="mrel mtight">=&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.05em;">&#x3C;span class="pstrut" style="height:3.05em;">&#x3C;/span>&#x3C;span>&#x3C;span class="mop op-symbol large-op">∑&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-4.3em;margin-left:0em;">&#x3C;span class="pstrut" style="height:3.05em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mathnormal mtight">c&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:1.2777em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">ki&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mord">∥&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">x&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mathnormal mtight" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">−&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.03588em;">v&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3117em;">&#x3C;span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mathnormal mtight">i&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord">∥&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.8641em;">&#x3C;span style="top:-3.113em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">2&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:1.2268em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="tag">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:1.7268em;">&#x3C;span style="top:-3.7268em;">&#x3C;span class="pstrut" style="height:3.6514em;">&#x3C;/span>&#x3C;span class="eqn-num">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:1.2268em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>
&#x3C;p>制約条件は、次のふたつです。&#x3C;/p>
&#x3C;span class="katex-display">&#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML" display="block">&#x3C;semantics>&#x3C;mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em">&#x3C;mtr>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd>&#x3C;mstyle scriptlevel="0" displaystyle="true">&#x3C;mrow>&#x3C;munderover>&#x3C;mo>∑&#x3C;/mo>&#x3C;mrow>&#x3C;mi>i&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;mi>c&#x3C;/mi>&#x3C;/munderover>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;mspace width="1em">&#x3C;/mspace>&#x3C;/mrow>&#x3C;/mstyle>&#x3C;/mtd>&#x3C;mtd>&#x3C;mstyle scriptlevel="0" displaystyle="true">&#x3C;mrow>&#x3C;mrow>&#x3C;/mrow>&#x3C;mo stretchy="false">(&#x3C;/mo>&#x3C;mi>k&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mtext> &#x3C;/mtext>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>n&#x3C;/mi>&#x3C;mo stretchy="false">)&#x3C;/mo>&#x3C;/mrow>&#x3C;/mstyle>&#x3C;/mtd>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd class="mml-eqn-num">&#x3C;/mtd>&#x3C;/mtr>&#x3C;mtr>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd>&#x3C;mstyle scriptlevel="0" displaystyle="true">&#x3C;mrow>&#x3C;munder accentunder="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/munder>&#x3C;mo>≤&#x3C;/mo>&#x3C;munderover>&#x3C;mo>∑&#x3C;/mo>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;mi>n&#x3C;/mi>&#x3C;/munderover>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>≤&#x3C;/mo>&#x3C;mover accent="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/mover>&#x3C;mspace width="1em">&#x3C;/mspace>&#x3C;/mrow>&#x3C;/mstyle>&#x3C;/mtd>&#x3C;mtd>&#x3C;mstyle scriptlevel="0" displaystyle="true">&#x3C;mrow>&#x3C;mrow>&#x3C;/mrow>&#x3C;mo stretchy="false">(&#x3C;/mo>&#x3C;mi>i&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mtext> &#x3C;/mtext>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>c&#x3C;/mi>&#x3C;mo stretchy="false">)&#x3C;/mo>&#x3C;/mrow>&#x3C;/mstyle>&#x3C;/mtd>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd class="mml-eqn-num">&#x3C;/mtd>&#x3C;/mtr>&#x3C;/mtable>&#x3C;annotation encoding="application/x-tex">\begin{align}
\sum_{i=1}^c u_{ki} = 1 \quad &#x26;#x26; (k=1,\cdots,n) \\
\underline{K} \leq \sum_{k=1}^n u_{ki} \leq \overline{K} \quad &#x26;#x26; (i=1,\cdots,c)
\end{align}&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:6.4826em;vertical-align:-2.9913em;">&#x3C;/span>&#x3C;span class="mtable">&#x3C;span class="col-align-r">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:3.4913em;">&#x3C;span style="top:-5.4913em;">&#x3C;span class="pstrut" style="height:3.6514em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mop op-limits">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:1.6514em;">&#x3C;span style="top:-1.8723em;margin-left:0em;">&#x3C;span class="pstrut" style="height:3.05em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">i&#x3C;/span>&#x3C;span class="mrel mtight">=&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.05em;">&#x3C;span class="pstrut" style="height:3.05em;">&#x3C;/span>&#x3C;span>&#x3C;span class="mop op-symbol large-op">∑&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-4.3em;margin-left:0em;">&#x3C;span class="pstrut" style="height:3.05em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mathnormal mtight">c&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:1.2777em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">ki&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mspace" style="margin-right:1em;">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-2.2622em;">&#x3C;span class="pstrut" style="height:3.6514em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord underline">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.6833em;">&#x3C;span style="top:-2.84em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="underline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">≤&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mop op-limits">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:1.6514em;">&#x3C;span style="top:-1.8479em;margin-left:0em;">&#x3C;span class="pstrut" style="height:3.05em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;span class="mrel mtight">=&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.05em;">&#x3C;span class="pstrut" style="height:3.05em;">&#x3C;/span>&#x3C;span>&#x3C;span class="mop op-symbol large-op">∑&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-4.3em;margin-left:0em;">&#x3C;span class="pstrut" style="height:3.05em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mathnormal mtight">n&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:1.3021em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">ki&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">≤&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mord overline">&#x3C;span class="vlist-t">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.8833em;">&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.8033em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="overline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:1em;">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:2.9913em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="col-align-l">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:3.4913em;">&#x3C;span style="top:-5.4913em;">&#x3C;span class="pstrut" style="height:3.6514em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord">&#x3C;/span>&#x3C;span class="mopen">(&#x3C;/span>&#x3C;span class="mord mathnormal" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord mathnormal">n&#x3C;/span>&#x3C;span class="mclose">)&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-2.2622em;">&#x3C;span class="pstrut" style="height:3.6514em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord">&#x3C;/span>&#x3C;span class="mopen">(&#x3C;/span>&#x3C;span class="mord mathnormal">i&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord mathnormal">c&#x3C;/span>&#x3C;span class="mclose">)&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:2.9913em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="tag">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:3.4913em;">&#x3C;span style="top:-5.4913em;">&#x3C;span class="pstrut" style="height:3.6514em;">&#x3C;/span>&#x3C;span class="eqn-num">&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-2.2622em;">&#x3C;span class="pstrut" style="height:3.6514em;">&#x3C;/span>&#x3C;span class="eqn-num">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:2.9913em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>
&#x3C;p>ひとつ目は、データはひとつのクラスタだけに属していることを表します。ふたつ目は、各クラスタがクラスタサイズ制約を満たしていることを表します。ひとつ目の制約は、すべての &#x3C;var>k&#x3C;/var> について考える必要があり、ふたつ目の制約は、すべての &#x3C;var>i&#x3C;/var> について考える必要があります。つまり、制約条件は &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;mi>n&#x3C;/mi>&#x3C;mo>+&#x3C;/mo>&#x3C;mi>c&#x3C;/mi>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">n + c&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.6667em;vertical-align:-0.0833em;">&#x3C;/span>&#x3C;span class="mord mathnormal">n&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:0.4306em;">&#x3C;/span>&#x3C;span class="mord mathnormal">c&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> 個あります。&#x3C;/p>
&#x3C;p>この最適化問題はシンプレックス法で解くことができます。シンプレックス法って何？ 調べてみましたが、行列で連立方程式を解く懐かしく面倒くさい方法を思い出させられたのでつらくなりました。 Wikipedia によれば、計算回数は、ほとんどの場合、変数の数か制約条件の数の大きい方の回数だけ反復することになるらしいので、このアルゴリズムでは大体 &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;mi>n&#x3C;/mi>&#x3C;mi>c&#x3C;/mi>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">nc&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.4306em;">&#x3C;/span>&#x3C;span class="mord mathnormal">n&#x3C;/span>&#x3C;span class="mord mathnormal">c&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> 回の計算をすれば解けることがわかります。&#x3C;/p>
&#x3C;h2>mlpack と GLPK を使って実装する&#x3C;/h2>
&#x3C;p>シンプレックス法に入力できる制約条件はわかりましたが、アルゴリズムは頭が理解を拒否するので、線形計画問題を解いてくれるライブラリを使っていきます。 &#x3C;kbd>apt search&#x3C;/kbd> で良いライブラリがないか探していたところ、 &#x3C;a href="https://www.gnu.org/software/glpk/">GLPK (GNU Linear Programming Kit)&#x3C;/a> というのを見つけたので、これを使っていきます。他にも線形計画問題を解くライブラリはありますが、使えるかは調べていません。今回解く問題では、目的変数の値が0か1しか取れないという条件があるので、これを表せる必要があります。&#x3C;/p>
&#x3C;p>それから、 C++ 界の numpy として、 &#x3C;a href="https://www.mlpack.org/">mlpack&#x3C;/a> と &#x3C;a href="http://arma.sourceforge.net/">Armadillo&#x3C;/a> を使っていきます。 mlpack には &#x3C;a href="https://www.mlpack.org/doc/stable/doxygen/classmlpack_1_1kmeans_1_1KMeans.html">k-means の実装&#x3C;/a>があるので、それに似せて作っていきましょう。&#x3C;/p>
&#x3C;p>まず、作成する関数のシグネチャです。&#x3C;/p>
&#x3C;pre>&#x3C;code class="language-cpp">&#x3C;span class="hljs-meta">#&#x3C;span class="hljs-keyword">include&#x3C;/span> &#x3C;span class="hljs-string">&#x26;#x3C;mlpack/core.hpp>&#x3C;/span>&#x3C;/span>

&#x3C;span class="hljs-function">&#x3C;span class="hljs-type">void&#x3C;/span> &#x3C;span class="hljs-title">ClusterWithCocbo&#x3C;/span>&#x3C;span class="hljs-params">(&#x3C;span class="hljs-type">const&#x3C;/span> arma::mat &#x26;#x26;data, &#x3C;span class="hljs-type">size_t&#x3C;/span> K, &#x3C;span class="hljs-type">size_t&#x3C;/span> lower_bound,
                      &#x3C;span class="hljs-type">size_t&#x3C;/span> upper_bound, arma::Row&#x26;#x3C;&#x3C;span class="hljs-type">size_t&#x3C;/span>> &#x26;#x26;assignments,
                      arma::mat &#x26;#x26;centroids, &#x3C;span class="hljs-type">size_t&#x3C;/span> max_iterations = &#x3C;span class="hljs-number">1000&#x3C;/span>)&#x3C;/span>&#x3C;/span>;
&#x3C;/code>&#x3C;/pre>
&#x3C;p>入力引数に、データとパラメータ、最大繰り返し回数を取り、出力引数に、各データがどのクラスタに属するかと、重心を取ります。 &#x3C;var>data&#x3C;/var> はひとつのデータを縦ベクトルとした行列です。つまり、行数がデータの次元数、列数がデータ数となります。&#x3C;/p>
&#x3C;p>では、手順1から実装していきましょう。初期重心を求めます。これは mlpack の k-means の実装をそのまま使ってしまいます。&#x3C;/p>
&#x3C;pre>&#x3C;code class="language-cpp">&#x3C;span class="hljs-comment">// 必要なヘッダー&#x3C;/span>
&#x3C;span class="hljs-comment">// #include &#x26;#x3C;mlpack/methods/kmeans/sample_initialization.hpp>&#x3C;/span>

&#x3C;span class="hljs-type">size_t&#x3C;/span> n = data.n_cols; &#x3C;span class="hljs-comment">// データ数&#x3C;/span>
&#x3C;span class="hljs-type">size_t&#x3C;/span> c = n / K; &#x3C;span class="hljs-comment">// クラスタ数&#x3C;/span>

&#x3C;span class="hljs-comment">// K の条件&#x3C;/span>
&#x3C;span class="hljs-built_in">assert&#x3C;/span>(n > &#x3C;span class="hljs-number">0&#x3C;/span> &#x26;#x26;&#x26;#x26; n &#x26;#x3C;= (K + &#x3C;span class="hljs-number">1&#x3C;/span>) * c);

&#x3C;span class="hljs-comment">// ランダムに c 個のデータを選んで重心とする&#x3C;/span>
&#x3C;span class="hljs-comment">// mlpack の初期重心計算をそのまま利用&#x3C;/span>
mlpack::kmeans::&#x3C;span class="hljs-built_in">SampleInitialization&#x3C;/span>().&#x3C;span class="hljs-built_in">Cluster&#x3C;/span>(data, c, centroids);
&#x3C;/code>&#x3C;/pre>
&#x3C;p>それでは、本題の、帰属度を線形計画法で解くのを GLPK を使って実装していきます。 GLPK の公式ドキュメントは、&#x3C;a href="http://ftp.gnu.org/gnu/glpk/">ダウンロードサイト&#x3C;/a>からソースコードをダウンロードすると、アーカイブの doc ディレクトリに PDF 形式で入っています。&#x3C;/p>
&#x3C;p>まずは、最適化問題を表すオブジェクトを作成します。&#x3C;/p>
&#x3C;pre>&#x3C;code class="language-cpp">&#x3C;span class="hljs-comment">// 必要なヘッダー&#x3C;/span>
&#x3C;span class="hljs-comment">// #include &#x26;#x3C;glpk.h>&#x3C;/span>

glp_prob *lp = &#x3C;span class="hljs-built_in">glp_create_prob&#x3C;/span>();
&#x3C;/code>&#x3C;/pre>
&#x3C;p>次に、問題が最大化問題か最小化問題かを指定します。ただし、デフォルトで最小化問題となっているので、これは書かなくても大丈夫です。&#x3C;/p>
&#x3C;pre>&#x3C;code class="language-cpp">&#x3C;span class="hljs-built_in">glp_set_obj_dir&#x3C;/span>(lp, GLP_MIN);
&#x3C;span class="hljs-comment">// 最大化問題ならば GLP_MAX&#x3C;/span>
&#x3C;/code>&#x3C;/pre>
&#x3C;p>次に、制約条件の行列を考えます。制約条件の行列とは、次の図の &#x3C;var>a&#x3C;/var> のことです。この行列を定義していくことで、 GLPK に問題を与えることができます。&#x3C;/p>
&#x3C;figure class="fig-img">
&#x3C;img src="https://blog.azyobuzi.net/2022/01/11/01-cocbo/glpkmat.svg" alt="" width="350" height="205">
&#x3C;figcaption>制約条件の行列とは&#x3C;/figcaption>
&#x3C;/figure>
&#x3C;p>まずは、目的関数を考えましょう。目的関数の項の数が行列の列数になります。目的関数は、式(4)から、 &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;mi>n&#x3C;/mi>&#x3C;mi>c&#x3C;/mi>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">nc&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.4306em;">&#x3C;/span>&#x3C;span class="mord mathnormal">n&#x3C;/span>&#x3C;span class="mord mathnormal">c&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> 個の項を持つことがわかります。というわけで、まずはこれを GLPK に設定していきます。&#x3C;/p>
&#x3C;pre>&#x3C;code class="language-cpp">&#x3C;span class="hljs-built_in">glp_add_cols&#x3C;/span>(lp, n * c);
&#x3C;/code>&#x3C;/pre>
&#x3C;p>これで、 &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;mi>n&#x3C;/mi>&#x3C;mi>c&#x3C;/mi>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">nc&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.4306em;">&#x3C;/span>&#x3C;span class="mord mathnormal">n&#x3C;/span>&#x3C;span class="mord mathnormal">c&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> 個の変数の存在を設定できました。この &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;mi>n&#x3C;/mi>&#x3C;mi>c&#x3C;/mi>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">nc&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.4306em;">&#x3C;/span>&#x3C;span class="mord mathnormal">n&#x3C;/span>&#x3C;span class="mord mathnormal">c&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> 個の変数とは何かというと、帰属度 &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">u_{ki}&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.5806em;vertical-align:-0.15em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">ki&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> です。帰属度は 0 か 1 しか値を取りません。 GLPK では、変数を二値や離散値にすることができるので、これを設定していきます。&#x3C;/p>
&#x3C;pre>&#x3C;code class="language-cpp">&#x3C;span class="hljs-keyword">for&#x3C;/span> (&#x3C;span class="hljs-type">size_t&#x3C;/span> k = &#x3C;span class="hljs-number">0&#x3C;/span>; k &#x26;#x3C; n; k++) {
  &#x3C;span class="hljs-keyword">for&#x3C;/span> (&#x3C;span class="hljs-type">size_t&#x3C;/span> i = &#x3C;span class="hljs-number">0&#x3C;/span>; i &#x26;#x3C; c; i++) {
    &#x3C;span class="hljs-built_in">glp_set_col_kind&#x3C;/span>(lp, k * c + i + &#x3C;span class="hljs-number">1&#x3C;/span>, GLP_BV);
    &#x3C;span class="hljs-comment">// GLP_IV で離散値、 GLP_BV で二値にできます。&#x3C;/span>
    &#x3C;span class="hljs-comment">// 第2引数は、何番目の変数について設定するかを表していますが、最初の変数を1とすることに注意してください。&#x3C;/span>
  }
}
&#x3C;/code>&#x3C;/pre>
&#x3C;p>これで列方向の設定は完了です。次に、行方向（制約条件）を設定していきましょう。制約条件は全部で &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;mi>n&#x3C;/mi>&#x3C;mo>+&#x3C;/mo>&#x3C;mi>c&#x3C;/mi>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">n + c&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.6667em;vertical-align:-0.0833em;">&#x3C;/span>&#x3C;span class="mord mathnormal">n&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:0.4306em;">&#x3C;/span>&#x3C;span class="mord mathnormal">c&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> 個あることを先ほど示しました。列と同じように、 GLPK に行を追加していきます。&#x3C;/p>
&#x3C;pre>&#x3C;code class="language-cpp">&#x3C;span class="hljs-built_in">glp_add_rows&#x3C;/span>(lp, n + c);
&#x3C;/code>&#x3C;/pre>
&#x3C;p>それでは、ひとつ目の制約条件 &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;msubsup>&#x3C;mo>∑&#x3C;/mo>&#x3C;mrow>&#x3C;mi>i&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;mi>c&#x3C;/mi>&#x3C;/msubsup>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;mtext> &#x3C;/mtext>&#x3C;mo stretchy="false">(&#x3C;/mo>&#x3C;mi>k&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mtext> &#x3C;/mtext>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>n&#x3C;/mi>&#x3C;mo stretchy="false">)&#x3C;/mo>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">\sum_{i=1}^c u_{ki} = 1 \ (k=1,\cdots,n)&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:1.104em;vertical-align:-0.2997em;">&#x3C;/span>&#x3C;span class="mop">&#x3C;span class="mop op-symbol small-op" style="position:relative;top:0em;">∑&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.8043em;">&#x3C;span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">i&#x3C;/span>&#x3C;span class="mrel mtight">=&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.2029em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mathnormal mtight">c&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2997em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">ki&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:1em;vertical-align:-0.25em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mspace"> &#x3C;/span>&#x3C;span class="mopen">(&#x3C;/span>&#x3C;span class="mord mathnormal" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:1em;vertical-align:-0.25em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord mathnormal">n&#x3C;/span>&#x3C;span class="mclose">)&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> を実装していきましょう。この条件はすべての &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mtext> &#x3C;/mtext>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>n&#x3C;/mi>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">k=1,\cdots,n&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.6944em;">&#x3C;/span>&#x3C;span class="mord mathnormal" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:0.8389em;vertical-align:-0.1944em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord mathnormal">n&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> について別々の制約条件であると考えます。このとき、 &#x3C;var>k&#x3C;/var> を固定したときの &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">u_{ki}&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.5806em;vertical-align:-0.15em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">ki&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> の和が 1 であることを示します。つまり、展開すると次のようになります。&#x3C;/p>
&#x3C;span class="katex-display">&#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML" display="block">&#x3C;semantics>&#x3C;mtable rowspacing="0.16em" columnspacing="1em">&#x3C;mtr>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd>&#x3C;mstyle scriptlevel="0" displaystyle="true">&#x3C;mrow>&#x3C;mn>0&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>+&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>0&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mo>−&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>c&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>+&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>c&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>0&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>+&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>0&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>n&#x3C;/mi>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>c&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;/mstyle>&#x3C;/mtd>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd class="mml-eqn-num">&#x3C;/mtd>&#x3C;/mtr>&#x3C;/mtable>&#x3C;annotation encoding="application/x-tex">\begin{equation}
0u_{1,1}+\cdots+0u_{k-1,c}+1u_{k,1}+\cdots+1u_{k,c}+0u_{k+1,1}+\cdots+0u_{n,c} = 1
\end{equation}&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:1.2em;vertical-align:-0.35em;">&#x3C;/span>&#x3C;span class="mtable">&#x3C;span class="col-align-c">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.85em;">&#x3C;span style="top:-3.01em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord">0&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3011em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">0&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;span class="mbin mtight">−&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mathnormal mtight">c&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mathnormal mtight">c&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">0&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;span class="mbin mtight">+&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">0&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.1514em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">n&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mathnormal mtight">c&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.35em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="tag">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.85em;">&#x3C;span style="top:-2.85em;">&#x3C;span class="pstrut" style="height:2.84em;">&#x3C;/span>&#x3C;span class="eqn-num">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.35em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>
&#x3C;p>GLPK では制約行列がスパースであると仮定しているので、係数が1であるところだけを GLPK に伝えれば良いわけです。これは、このように実装できます。&#x3C;/p>
&#x3C;pre>&#x3C;code class="language-cpp">&#x3C;span class="hljs-keyword">for&#x3C;/span> (&#x3C;span class="hljs-type">size_t&#x3C;/span> k = &#x3C;span class="hljs-number">0&#x3C;/span>; k &#x26;#x3C; n; k++) {
  &#x3C;span class="hljs-type">int&#x3C;/span> row_idx = k + &#x3C;span class="hljs-number">1&#x3C;/span>; &#x3C;span class="hljs-comment">// k番目の制約条件&#x3C;/span>

  &#x3C;span class="hljs-comment">// 制約条件の下限と上限を設定する。 GLP_FX は = を表す。&#x3C;/span>
  &#x3C;span class="hljs-built_in">glp_set_row_bnds&#x3C;/span>(lp, row_idx, GLP_FX, &#x3C;span class="hljs-number">1&#x3C;/span>, &#x3C;span class="hljs-number">1&#x3C;/span>);

  &#x3C;span class="hljs-comment">// GLPK に渡すデータを作る。何列目に何の値を代入するかという形式で渡す。&#x3C;/span>
  &#x3C;span class="hljs-comment">// 配列の 0 番目は使われないことに注意。&#x3C;/span>
  &#x3C;span class="hljs-comment">// ※ 説明のためにここで定義していますが、ループの外に出したほうがパフォーマンスが良くなります。&#x3C;/span>
  &#x3C;span class="hljs-function">std::vector&#x26;#x3C;&#x3C;span class="hljs-type">int&#x3C;/span>> &#x3C;span class="hljs-title">indices&#x3C;/span>&#x3C;span class="hljs-params">(c + &#x3C;span class="hljs-number">1&#x3C;/span>)&#x3C;/span>&#x3C;/span>; &#x3C;span class="hljs-comment">// 行列の何列目に代入する？&#x3C;/span>
  &#x3C;span class="hljs-function">std::vector&#x26;#x3C;&#x3C;span class="hljs-type">double&#x3C;/span>> &#x3C;span class="hljs-title">ones&#x3C;/span>&#x3C;span class="hljs-params">(c + &#x3C;span class="hljs-number">1&#x3C;/span>, &#x3C;span class="hljs-number">1&#x3C;/span>)&#x3C;/span>&#x3C;/span>; &#x3C;span class="hljs-comment">// 係数（この問題では 1 しか出てこない）&#x3C;/span>
  &#x3C;span class="hljs-keyword">for&#x3C;/span> (&#x3C;span class="hljs-type">size_t&#x3C;/span> i = &#x3C;span class="hljs-number">0&#x3C;/span>; i &#x26;#x3C; c; i++)
    indices[i + &#x3C;span class="hljs-number">1&#x3C;/span>] = k * c + i + &#x3C;span class="hljs-number">1&#x3C;/span>;
  &#x3C;span class="hljs-comment">// c 個の係数を設定&#x3C;/span>
  &#x3C;span class="hljs-built_in">glp_set_mat_row&#x3C;/span>(lp, row_idx, c, indices.&#x3C;span class="hljs-built_in">data&#x3C;/span>(), ones.&#x3C;span class="hljs-built_in">data&#x3C;/span>());
}
&#x3C;/code>&#x3C;/pre>
&#x3C;p>ふたつ目の制約条件も行ってみましょう。制約条件 &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;munder accentunder="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/munder>&#x3C;mo>≤&#x3C;/mo>&#x3C;msubsup>&#x3C;mo>∑&#x3C;/mo>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;mi>n&#x3C;/mi>&#x3C;/msubsup>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>≤&#x3C;/mo>&#x3C;mover accent="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/mover>&#x3C;mtext> &#x3C;/mtext>&#x3C;mo stretchy="false">(&#x3C;/mo>&#x3C;mi>i&#x3C;/mi>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mtext> &#x3C;/mtext>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>c&#x3C;/mi>&#x3C;mo stretchy="false">)&#x3C;/mo>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">\underline{K} \leq \sum_{k=1}^n u_{ki} \leq \overline{K} \ (i=1,\cdots,c)&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.8833em;vertical-align:-0.2em;">&#x3C;/span>&#x3C;span class="mord underline">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.6833em;">&#x3C;span style="top:-2.84em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="underline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">≤&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:1.104em;vertical-align:-0.2997em;">&#x3C;/span>&#x3C;span class="mop">&#x3C;span class="mop op-symbol small-op" style="position:relative;top:0em;">∑&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.8043em;">&#x3C;span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;span class="mrel mtight">=&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.2029em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mathnormal mtight">n&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2997em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">ki&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">≤&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:1.1333em;vertical-align:-0.25em;">&#x3C;/span>&#x3C;span class="mord overline">&#x3C;span class="vlist-t">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.8833em;">&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.8033em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="overline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace"> &#x3C;/span>&#x3C;span class="mopen">(&#x3C;/span>&#x3C;span class="mord mathnormal">i&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:1em;vertical-align:-0.25em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord mathnormal">c&#x3C;/span>&#x3C;span class="mclose">)&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> は、展開するとこのようになります。&#x3C;/p>
&#x3C;span class="katex-display">&#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML" display="block">&#x3C;semantics>&#x3C;mtable rowspacing="0.16em" columnspacing="1em">&#x3C;mtr>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd>&#x3C;mstyle scriptlevel="0" displaystyle="true">&#x3C;mrow>&#x3C;munder accentunder="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/munder>&#x3C;mo>≤&#x3C;/mo>&#x3C;mn>0&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>+&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>0&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>i&#x3C;/mi>&#x3C;mo>−&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>0&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mn>1&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>i&#x3C;/mi>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>+&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>0&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mn>2&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>i&#x3C;/mi>&#x3C;mo>−&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mn>2&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>0&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mn>2&#x3C;/mn>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>i&#x3C;/mi>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>+&#x3C;/mo>&#x3C;mo>⋯&#x3C;/mo>&#x3C;mn>0&#x3C;/mn>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>n&#x3C;/mi>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mi>c&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>≤&#x3C;/mo>&#x3C;mover accent="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/mover>&#x3C;/mrow>&#x3C;/mstyle>&#x3C;/mtd>&#x3C;mtd class="mtr-glue">&#x3C;/mtd>&#x3C;mtd class="mml-eqn-num">&#x3C;/mtd>&#x3C;/mtr>&#x3C;/mtable>&#x3C;annotation encoding="application/x-tex">\begin{equation}
\underline{K} \leq 0u_{1,1} + \cdots + 0u_{1,i-1} + 1u_{1,i} + 0u_{1,i+1} + \cdots + 0u_{2,i-1} + 1u_{2,i} + 0u_{2,i+1} + \cdots 0u_{n,c} \leq \overline{K}
\end{equation}&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:1.2433em;vertical-align:-0.3717em;">&#x3C;/span>&#x3C;span class="mtable">&#x3C;span class="col-align-c">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.8717em;">&#x3C;span style="top:-2.9883em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord underline">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.6833em;">&#x3C;span style="top:-2.84em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="underline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">≤&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mord">0&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3011em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">0&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3117em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mathnormal mtight">i&#x3C;/span>&#x3C;span class="mbin mtight">−&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3117em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mathnormal mtight">i&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">0&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3117em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mathnormal mtight">i&#x3C;/span>&#x3C;span class="mbin mtight">+&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">0&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3117em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mtight">2&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mathnormal mtight">i&#x3C;/span>&#x3C;span class="mbin mtight">−&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3117em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mtight">2&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mathnormal mtight">i&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mord">0&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3117em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mtight">2&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mathnormal mtight">i&#x3C;/span>&#x3C;span class="mbin mtight">+&#x3C;/span>&#x3C;span class="mord mtight">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="minner">⋯&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord">0&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.1514em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">n&#x3C;/span>&#x3C;span class="mpunct mtight">,&#x3C;/span>&#x3C;span class="mord mathnormal mtight">c&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2861em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">≤&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mord overline">&#x3C;span class="vlist-t">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.8833em;">&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.8033em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="overline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3717em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="tag">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.8717em;">&#x3C;span style="top:-2.8717em;">&#x3C;span class="pstrut" style="height:2.8833em;">&#x3C;/span>&#x3C;span class="eqn-num">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3717em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>
&#x3C;p>実装方法は、ひとつ目と同じ感じです。&#x3C;/p>
&#x3C;pre>&#x3C;code class="language-cpp">&#x3C;span class="hljs-comment">// ひとつ目とループの入れ子構造が逆！&#x3C;/span>
&#x3C;span class="hljs-keyword">for&#x3C;/span> (&#x3C;span class="hljs-type">size_t&#x3C;/span> i = &#x3C;span class="hljs-number">0&#x3C;/span>; i &#x26;#x3C; c; i++) {
  &#x3C;span class="hljs-type">int&#x3C;/span> row_idx = n + i + &#x3C;span class="hljs-number">1&#x3C;/span>; &#x3C;span class="hljs-comment">// n+i番目の制約条件&#x3C;/span>

  &#x3C;span class="hljs-comment">// 制約条件の下限と上限を設定する。 GLP_DB は指定した両端を含む条件となる。&#x3C;/span>
  &#x3C;span class="hljs-built_in">glp_set_row_bnds&#x3C;/span>(lp, row_idx, GLP_DB, lower_bound, upper_bound);

  &#x3C;span class="hljs-function">std::vector&#x26;#x3C;&#x3C;span class="hljs-type">int&#x3C;/span>> &#x3C;span class="hljs-title">indices&#x3C;/span>&#x3C;span class="hljs-params">(n + &#x3C;span class="hljs-number">1&#x3C;/span>)&#x3C;/span>&#x3C;/span>;
  &#x3C;span class="hljs-function">std::vector&#x26;#x3C;&#x3C;span class="hljs-type">double&#x3C;/span>> &#x3C;span class="hljs-title">ones&#x3C;/span>&#x3C;span class="hljs-params">(n + &#x3C;span class="hljs-number">1&#x3C;/span>, &#x3C;span class="hljs-number">1&#x3C;/span>)&#x3C;/span>&#x3C;/span>;
  &#x3C;span class="hljs-keyword">for&#x3C;/span> (&#x3C;span class="hljs-type">size_t&#x3C;/span> k = &#x3C;span class="hljs-number">0&#x3C;/span>; k &#x26;#x3C; n; k++)
    indices[k + &#x3C;span class="hljs-number">1&#x3C;/span>] = k * c + i + &#x3C;span class="hljs-number">1&#x3C;/span>;
  &#x3C;span class="hljs-comment">// n 個の係数を設定&#x3C;/span>
  &#x3C;span class="hljs-built_in">glp_set_mat_row&#x3C;/span>(lp, row_idx, n, indices.&#x3C;span class="hljs-built_in">data&#x3C;/span>(), ones.&#x3C;span class="hljs-built_in">data&#x3C;/span>());
}
&#x3C;/code>&#x3C;/pre>
&#x3C;p>これで、制約条件行列は完成です！ ここから先は手順2～4なので、ループの中にはいっていきます。&#x3C;/p>
&#x3C;p>帰属度の計算をやっていきます。まず、現在の重心を使って、目的関数の係数を設定します。目的関数（式(4)ですよ！）の係数は、 &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;mi mathvariant="normal">∥&#x3C;/mi>&#x3C;msub>&#x3C;mi>x&#x3C;/mi>&#x3C;mi>k&#x3C;/mi>&#x3C;/msub>&#x3C;mo>−&#x3C;/mo>&#x3C;msub>&#x3C;mi>v&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/msub>&#x3C;msup>&#x3C;mi mathvariant="normal">∥&#x3C;/mi>&#x3C;mn>2&#x3C;/mn>&#x3C;/msup>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">\| x_k - v_i \| ^2&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:1em;vertical-align:-0.25em;">&#x3C;/span>&#x3C;span class="mord">∥&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">x&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mathnormal mtight" style="margin-right:0.03148em;">k&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">−&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:1.0641em;vertical-align:-0.25em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.03588em;">v&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3117em;">&#x3C;span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mathnormal mtight">i&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord">∥&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.8141em;">&#x3C;span style="top:-3.063em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">2&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> 、つまりデータと重心の距離です。これを計算して GLPK に設定していきます。距離の計算は、 mlpack に任せてしまいましょう。&#x3C;/p>
&#x3C;pre>&#x3C;code class="language-cpp">mlpack::metric::EuclideanDistance metric;

&#x3C;span class="hljs-keyword">for&#x3C;/span> (&#x3C;span class="hljs-type">size_t&#x3C;/span> k = &#x3C;span class="hljs-number">0&#x3C;/span>; k &#x26;#x3C; n; k++) {
  &#x3C;span class="hljs-keyword">for&#x3C;/span> (&#x3C;span class="hljs-type">size_t&#x3C;/span> i = &#x3C;span class="hljs-number">0&#x3C;/span>; i &#x26;#x3C; c; i++) {
    &#x3C;span class="hljs-type">double&#x3C;/span> distance = metric.&#x3C;span class="hljs-built_in">Evaluate&#x3C;/span>(
      data.&#x3C;span class="hljs-built_in">col&#x3C;/span>(k), &#x3C;span class="hljs-comment">// データは縦ベクトル&#x3C;/span>
      centroids.&#x3C;span class="hljs-built_in">col&#x3C;/span>(i));
    &#x3C;span class="hljs-built_in">glp_set_obj_coef&#x3C;/span>(lp, k * c + i + &#x3C;span class="hljs-number">1&#x3C;/span>, distance);
  }
}
&#x3C;/code>&#x3C;/pre>
&#x3C;p>これで目的関数も制約条件もすべて揃いました。あとは GLPK に計算をぶん投げましょう。&#x3C;/p>
&#x3C;pre>&#x3C;code class="language-cpp">&#x3C;span class="hljs-type">int&#x3C;/span> solve_result = &#x3C;span class="hljs-built_in">glp_simplex&#x3C;/span>(lp, &#x3C;span class="hljs-literal">nullptr&#x3C;/span>);
&#x3C;span class="hljs-comment">// 戻り値が 0 なら成功&#x3C;/span>
&#x3C;/code>&#x3C;/pre>
&#x3C;p>得られた結果（変数の値）は &#x3C;code>glp_get_col_prim&#x3C;/code> 関数で取得することができます。 &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;msub>&#x3C;mi>u&#x3C;/mi>&#x3C;mrow>&#x3C;mi>k&#x3C;/mi>&#x3C;mi>i&#x3C;/mi>&#x3C;/mrow>&#x3C;/msub>&#x3C;mo>=&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">u_{ki}=1&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.5806em;vertical-align:-0.15em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal">u&#x3C;/span>&#x3C;span class="msupsub">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.3361em;">&#x3C;span style="top:-2.55em;margin-left:0em;margin-right:0.05em;">&#x3C;span class="pstrut" style="height:2.7em;">&#x3C;/span>&#x3C;span class="sizing reset-size6 size3 mtight">&#x3C;span class="mord mtight">&#x3C;span class="mord mathnormal mtight">ki&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.15em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:0.6444em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> ならば、 &#x3C;var>k&#x3C;/var> 番目のデータは、クラスタ &#x3C;var>i&#x3C;/var> に属しているということになります。これを &#x3C;var>assignments&#x3C;/var> に代入していきましょう。&#x3C;/p>
&#x3C;pre>&#x3C;code class="language-cpp">assignments.&#x3C;span class="hljs-built_in">zeros&#x3C;/span>(n); &#x3C;span class="hljs-comment">// 初期化&#x3C;/span>

&#x3C;span class="hljs-keyword">for&#x3C;/span> (&#x3C;span class="hljs-type">size_t&#x3C;/span> k = &#x3C;span class="hljs-number">0&#x3C;/span>; k &#x26;#x3C; n; k++) {
  &#x3C;span class="hljs-keyword">for&#x3C;/span> (&#x3C;span class="hljs-type">size_t&#x3C;/span> i = &#x3C;span class="hljs-number">0&#x3C;/span>; i &#x26;#x3C; c; i++) {
    &#x3C;span class="hljs-type">double&#x3C;/span> u = &#x3C;span class="hljs-built_in">glp_get_col_prim&#x3C;/span>(lp, k * c + i + &#x3C;span class="hljs-number">1&#x3C;/span>);

    &#x3C;span class="hljs-comment">// GLP_BV なので 0 か 1 しか取らないはず&#x3C;/span>
    &#x3C;span class="hljs-built_in">assert&#x3C;/span>(u == &#x3C;span class="hljs-number">0&#x3C;/span> || u == &#x3C;span class="hljs-number">1&#x3C;/span>);

    &#x3C;span class="hljs-keyword">if&#x3C;/span> (u == &#x3C;span class="hljs-number">1&#x3C;/span>) {
      &#x3C;span class="hljs-built_in">assignments&#x3C;/span>(k) = i;
      &#x3C;span class="hljs-keyword">break&#x3C;/span>;
    }
  }
}
&#x3C;/code>&#x3C;/pre>
&#x3C;p>これで帰属度の計算は終わりです。あとは、 k-means と同じように重心を更新して、必要であれば目的関数を更新して再度実行していきます。&#x3C;/p>
&#x3C;p>プログラム全体は GitHub に置いておきます。&#x3C;/p>
&#x3C;ul>
&#x3C;li>&#x3C;a href="https://github.com/azyobuzin/cocbo-glpk/blob/main/cocbo.cpp">cocbo.cpp&#x3C;/a>&#x3C;/li>
&#x3C;/ul>
&#x3C;h2>実際のクラスタリング結果&#x3C;/h2>
&#x3C;p>二次元平面に適当な30点を置いて、クラスタサイズ &#x3C;var>K&#x3C;/var> を変化させて実験を行いました。下限と上限はそれぞれ &#x3C;span class="katex">&#x3C;span class="katex-mathml">&#x3C;math xmlns="http://www.w3.org/1998/Math/MathML">&#x3C;semantics>&#x3C;mrow>&#x3C;munder accentunder="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/munder>&#x3C;mo>=&#x3C;/mo>&#x3C;mi>K&#x3C;/mi>&#x3C;mo separator="true">,&#x3C;/mo>&#x3C;mover accent="true">&#x3C;mi>K&#x3C;/mi>&#x3C;mo stretchy="true">‾&#x3C;/mo>&#x3C;/mover>&#x3C;mo>=&#x3C;/mo>&#x3C;mi>K&#x3C;/mi>&#x3C;mo>+&#x3C;/mo>&#x3C;mn>1&#x3C;/mn>&#x3C;/mrow>&#x3C;annotation encoding="application/x-tex">\underline{K}=K, \overline{K}=K+1&#x3C;/annotation>&#x3C;/semantics>&#x3C;/math>&#x3C;/span>&#x3C;span class="katex-html" aria-hidden="true">&#x3C;span class="base">&#x3C;span class="strut" style="height:0.8833em;vertical-align:-0.2em;">&#x3C;/span>&#x3C;span class="mord underline">&#x3C;span class="vlist-t vlist-t2">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.6833em;">&#x3C;span style="top:-2.84em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="underline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-s">​&#x3C;/span>&#x3C;/span>&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.2em;">&#x3C;span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:1.0778em;vertical-align:-0.1944em;">&#x3C;/span>&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;span class="mpunct">,&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.1667em;">&#x3C;/span>&#x3C;span class="mord overline">&#x3C;span class="vlist-t">&#x3C;span class="vlist-r">&#x3C;span class="vlist" style="height:0.8833em;">&#x3C;span style="top:-3em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="mord">&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span style="top:-3.8033em;">&#x3C;span class="pstrut" style="height:3em;">&#x3C;/span>&#x3C;span class="overline-line" style="border-bottom-width:0.04em;">&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;span class="mrel">=&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2778em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:0.7667em;vertical-align:-0.0833em;">&#x3C;/span>&#x3C;span class="mord mathnormal" style="margin-right:0.07153em;">K&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;span class="mbin">+&#x3C;/span>&#x3C;span class="mspace" style="margin-right:0.2222em;">&#x3C;/span>&#x3C;/span>&#x3C;span class="base">&#x3C;span class="strut" style="height:0.6444em;">&#x3C;/span>&#x3C;span class="mord">1&#x3C;/span>&#x3C;/span>&#x3C;/span>&#x3C;/span> としました。&#x3C;/p>
&#x3C;p>結果は以下の通りです。●がデータ、×が重心です。割り切れる数でやったので、ちょうど &#x3C;var>K&#x3C;/var> 個ずつのクラスタに分かれたことがわかります。&#x3C;/p>
&#x3C;figure class="fig-img">
&#x3C;img src="https://blog.azyobuzi.net/2022/01/11/01-cocbo/cocbok5.svg" alt="" loading="lazy" width="540" height="360">
&#x3C;figcaption>K=5&#x3C;/figcaption>
&#x3C;/figure>
&#x3C;figure class="fig-img">
&#x3C;img src="https://blog.azyobuzi.net/2022/01/11/01-cocbo/cocbok10.svg" alt="" loading="lazy" width="540" height="360">
&#x3C;figcaption>K=10&#x3C;/figcaption>
&#x3C;/figure>
&#x3C;figure class="fig-img">
&#x3C;img src="https://blog.azyobuzi.net/2022/01/11/01-cocbo/cocbok15.svg" alt="" loading="lazy" width="540" height="360">
&#x3C;figcaption>K=15&#x3C;/figcaption>
&#x3C;/figure>
&#x3C;h2>まとめ&#x3C;/h2>
&#x3C;p>GLPK を使って、クラスタサイズを指定できるクラスタリング手法を実装しました。類似データを何個かにグルーピングしたいみたいな用途で威力を発揮すると思います。&#x3C;/p>
&#x3C;p>この記事を書いたおかげで、研究の実験コードのバグを見つけられました。やったね。さて、修論を倒さないと。&#x3C;/p></content><id>https://blog.azyobuzi.net/2022/01/11/01-cocbo/</id><link href="https://blog.azyobuzi.net/2022/01/11/01-cocbo/" rel="alternate" type="text/html" /><link href="https://blog.azyobuzi.net/2022/01/11/01-cocbo/cocbok5.svg" rel="enclosure" /><published>2022-01-11T18:06:00+09:00</published><title type="html">クラスタサイズを指定できるk-meansベースのクラスタリング手法を実装した話</title><updated>2022-02-05T01:27:03+09:00</updated></entry></feed>